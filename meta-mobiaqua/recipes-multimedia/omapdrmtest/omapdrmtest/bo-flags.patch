diff -urp org/copycodectest.c git/copycodectest.c
--- org/copycodectest.c	2022-04-14 11:49:36
+++ git/copycodectest.c	2022-11-06 16:41:33
@@ -112,11 +112,11 @@ decoder_open(int pattern)
 		goto fail;
 	}
 	decoder->input_sz = width * height;
-	decoder->input_bo = omap_bo_new(dev, decoder->input_sz, OMAP_BO_WC);
+	decoder->input_bo = omap_bo_new(dev, decoder->input_sz, OMAP_BO_WC | OMAP_BO_SCANOUT);
 	decoder->input = omap_bo_map(decoder->input_bo);
 
 	decoder->output_sz = width * height;
-	decoder->output_bo = omap_bo_new(dev, decoder->output_sz, OMAP_BO_WC);
+	decoder->output_bo = omap_bo_new(dev, decoder->output_sz, OMAP_BO_WC | OMAP_BO_SCANOUT);
 	decoder->output = omap_bo_map(decoder->output_bo);
 
 	decoder->params = dsp_dce_alloc(sizeof(IVIDDEC2_Params));
diff -urp org/filevpedisplay.c git/filevpedisplay.c
--- org/filevpedisplay.c	2022-04-14 11:49:36
+++ git/filevpedisplay.c	2022-11-06 16:41:20
@@ -139,7 +139,7 @@ int allocate_input_buffers(struct vpe *vpe, void *base
 int allocate_input_buffers(struct vpe *vpe, void *base[], void *base_uv[])
 {
 	int i;
-        uint32_t bo_flags = OMAP_BO_WC;
+        uint32_t bo_flags = OMAP_BO_WC | OMAP_BO_SCANOUT;
 
          for (i = 0; i < NUMBUF; i++) {
                 bo_y[i] = omap_bo_new(vpe->disp->dev, vpe->src.size,
diff -urp org/util/display-kms.c git/util/display-kms.c
--- org/util/display-kms.c	2022-04-14 11:49:36
+++ git/util/display-kms.c	2022-11-06 16:42:12
@@ -87,7 +87,7 @@ alloc_bo(struct display *disp, uint32_t bpp, uint32_t 
 			bo_flags |= OMAP_BO_TILED_32;
 		}
 	}
-	bo_flags |= OMAP_BO_WC;
+	bo_flags |= OMAP_BO_WC | OMAP_BO_SCANOUT;
 
 	if (bo_flags & OMAP_BO_TILED) {
 		bo = omap_bo_new_tiled(disp->dev, ALIGN2(width,7), height, bo_flags);
diff -urp org/util/display-kmscube.c git/util/display-kmscube.c
--- org/util/display-kmscube.c	2022-04-14 11:49:38
+++ git/util/display-kmscube.c	2022-11-06 16:41:14
@@ -556,7 +551,7 @@ alloc_bo(struct display *disp, uint32_t bpp, uint32_t 
 		}
 	}
 
-	bo_flags |= OMAP_BO_WC;
+	bo_flags |= OMAP_BO_WC | OMAP_BO_SCANOUT;
 
 	if (bo_flags & OMAP_BO_TILED) {
 		bo = omap_bo_new_tiled(disp->dev, ALIGN2(width,7), height, bo_flags);
diff -urp org/util/display-wayland.c git/util/display-wayland.c
--- org/util/display-wayland.c	2022-04-14 11:49:36
+++ git/util/display-wayland.c	2022-11-06 16:42:17
@@ -82,7 +82,7 @@ alloc_bo(struct display *disp, uint32_t bpp, uint32_t 
 	struct omap_bo *bo;
 	uint32_t bo_flags = disp_wl->bo_flags;
 
-	bo_flags |= OMAP_BO_WC;
+	bo_flags |= OMAP_BO_WC | OMAP_BO_SCANOUT;
 	bo = omap_bo_new(disp->dev, width * height * bpp / 8, bo_flags);
 
 	if (bo) {
diff -urp org/viddec3test.c git/viddec3test.c
--- org/viddec3test.c	2022-04-14 11:49:36
+++ git/viddec3test.c	2022-11-06 16:42:01
@@ -211,7 +211,7 @@ decoder_open(int argc, char **argv)
 
 	decoder->input_sz = width * height;
 	decoder->input_bo = omap_bo_new(decoder->disp->dev,
-			decoder->input_sz, OMAP_BO_WC);
+			decoder->input_sz, OMAP_BO_WC | OMAP_BO_SCANOUT);
 	decoder->input = omap_bo_map(decoder->input_bo);
 
 
diff -urp org/videnc2test.c git/videnc2test.c
--- org/videnc2test.c	2022-04-14 11:49:36
+++ git/videnc2test.c	2022-11-06 16:41:55
@@ -996,14 +996,14 @@ static int encoder_init(encoder *enc)
             ERROR("Unrecognized codec to encode");
     }
 	/*Allocate the input buffers */
-	enc->buf.y_bo = omap_bo_new(enc->dev, enc->width * enc->height, OMAP_BO_WC);
+	enc->buf.y_bo = omap_bo_new(enc->dev, enc->width * enc->height, OMAP_BO_WC | OMAP_BO_SCANOUT);
 	if(!enc->buf.y_bo) goto bail;
 	enc->buf.ybuff = omap_bo_map(enc->buf.y_bo);
 	enc->buf.fdy = omap_bo_dmabuf(enc->buf.y_bo);
 	dce_buf_lock(1, (size_t*) &enc->buf.fdy);
 	enc->buf.sizey = enc->width * enc->height;
 	enc->buf.uv_bo = omap_bo_new(enc->dev,
-								(enc->width * enc->height) / 2, OMAP_BO_WC);
+								(enc->width * enc->height) / 2, OMAP_BO_WC | OMAP_BO_SCANOUT);
 	if(!enc->buf.uv_bo) goto bail;
 	enc->buf.uvbuff = omap_bo_map(enc->buf.uv_bo);
 	enc->buf.fduv = omap_bo_dmabuf(enc->buf.uv_bo);
@@ -1107,7 +1107,7 @@ static int encoder_init(encoder *enc)
 	enc->outBufs->numBufs = (enc->codectype == DCE_ENC_TEST_H264) ? ((VIDENC2_Status *)(enc->h264enc_status))->bufInfo.minNumOutBufs : 1;
 
 	/*allocate the output buffer*/
-	enc->output_bo = omap_bo_new(enc->dev, output_size, OMAP_BO_WC);
+	enc->output_bo = omap_bo_new(enc->dev, output_size, OMAP_BO_WC | OMAP_BO_SCANOUT);
 	enc->cdata = omap_bo_map(enc->output_bo);
 	enc->outBufs->descs[0].buf = (void *)omap_bo_dmabuf(enc->output_bo);
 	dce_buf_lock(1, (size_t*) &(enc->outBufs->descs[0].buf));
@@ -1117,7 +1117,7 @@ static int encoder_init(encoder *enc)
 
     if( mvbufinfo_size > 0 ) {
 		/*Allocate the output mv buffer*/
-		enc->mv_bo = omap_bo_new(enc->dev, mvbufinfo_size, OMAP_BO_WC);
+		enc->mv_bo = omap_bo_new(enc->dev, mvbufinfo_size, OMAP_BO_WC | OMAP_BO_SCANOUT);
 		enc->outBufs->descs[1].buf = (void *)omap_bo_dmabuf(enc->mv_bo);
 		dce_buf_lock(1, (size_t*) &(enc->outBufs->descs[1].buf));
 		enc->outBufs->descs[1].memType = XDM_MEMTYPE_RAW;
diff -urp org/yuvcopytest.c git/yuvcopytest.c
--- org/yuvcopytest.c	2022-04-14 11:49:36
+++ git/yuvcopytest.c	2022-11-06 16:41:38
@@ -165,7 +165,7 @@ decoder_open(int argc, char** argv)
 
         decoder->input_sz = width * height;
         decoder->input_bo = omap_bo_new(decoder->disp->dev,
-		        	decoder->input_sz, OMAP_BO_WC);
+		        	decoder->input_sz, OMAP_BO_WC | OMAP_BO_SCANOUT);
         decoder->input = omap_bo_map(decoder->input_bo);
         decoder->framebuf = disp_get_fb(decoder->disp);
 
