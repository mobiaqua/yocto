diff --git a/scripts/Makefile b/scripts/Makefile
index 9adb6d247..96b6c6b99 100644
--- a/scripts/Makefile
+++ b/scripts/Makefile
@@ -19,9 +19,9 @@ hostprogs-always-$(CONFIG_SYSTEM_REVOCATION_LIST)	+= extract-cert
 HOSTCFLAGS_sorttable.o = -I$(srctree)/tools/include
 HOSTCFLAGS_asn1_compiler.o = -I$(srctree)/include
 HOSTCFLAGS_sign-file.o = $(CRYPTO_CFLAGS)
-HOSTLDLIBS_sign-file = $(CRYPTO_LIBS)
+HOSTLDLIBS_sign-file = $(CRYPTO_LIBS) $(HOST_LIBS)
 HOSTCFLAGS_extract-cert.o = $(CRYPTO_CFLAGS)
-HOSTLDLIBS_extract-cert = $(CRYPTO_LIBS)
+HOSTLDLIBS_extract-cert = $(CRYPTO_LIBS) $(HOST_LIBS)
 
 ifdef CONFIG_UNWINDER_ORC
 ifeq ($(ARCH),x86_64)
diff --git a/scripts/kconfig/mconf-cfg.sh b/scripts/kconfig/mconf-cfg.sh
index aa68ec956..3beddefe8 100755
--- a/scripts/kconfig/mconf-cfg.sh
+++ b/scripts/kconfig/mconf-cfg.sh
@@ -1,6 +1,6 @@
 #!/bin/sh
 # SPDX-License-Identifier: GPL-2.0
-
+exit 0
 PKG="ncursesw"
 PKG2="ncurses"
 
diff --git a/scripts/mod/file2alias.c b/scripts/mod/file2alias.c
index f81cbe021a47..11d0c743bf47 100644
--- a/scripts/mod/file2alias.c
+++ b/scripts/mod/file2alias.c
@@ -42,9 +42,6 @@ typedef struct {
 typedef struct {
 	__u8 b[16];
 } uuid_le;
-typedef struct {
-	__u8 b[16];
-} uuid_t;
 #define	UUID_STRING_LEN		36
 
 /* Big exception to the "don't include kernel headers into userspace, which
@@ -104,17 +101,6 @@ static inline void add_wildcard(char *str)
 		strcat(str + len, "*");
 }
 
-static inline void add_uuid(char *str, uuid_le uuid)
-{
-	int len = strlen(str);
-
-	sprintf(str + len, "%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x",
-		uuid.b[3], uuid.b[2], uuid.b[1], uuid.b[0],
-		uuid.b[5], uuid.b[4], uuid.b[7], uuid.b[6],
-		uuid.b[8], uuid.b[9], uuid.b[10], uuid.b[11],
-		uuid.b[12], uuid.b[13], uuid.b[14], uuid.b[15]);
-}
-
 /**
  * Check that sizeof(device_id type) are consistent with size of section
  * in .o file. If in-consistent then userspace and kernel does not agree
@@ -1191,24 +1177,6 @@ static int do_cpu_entry(const char *filename, void *symval, char *alias)
 	return 1;
 }
 
-/* Looks like: mei:S:uuid:N:* */
-static int do_mei_entry(const char *filename, void *symval,
-			char *alias)
-{
-	DEF_FIELD_ADDR(symval, mei_cl_device_id, name);
-	DEF_FIELD_ADDR(symval, mei_cl_device_id, uuid);
-	DEF_FIELD(symval, mei_cl_device_id, version);
-
-	sprintf(alias, MEI_CL_MODULE_PREFIX);
-	sprintf(alias + strlen(alias), "%s:",  (*name)[0]  ? *name : "*");
-	add_uuid(alias, *uuid);
-	ADD(alias, ":", version != MEI_CL_VERSION_ANY, version);
-
-	strcat(alias, ":*");
-
-	return 1;
-}
-
 /* Looks like: rapidio:vNdNavNadN */
 static int do_rio_entry(const char *filename,
 			void *symval, char *alias)
@@ -1317,21 +1285,6 @@ static int do_typec_entry(const char *filename, void *symval, char *alias)
 	return 1;
 }
 
-/* Looks like: tee:uuid */
-static int do_tee_entry(const char *filename, void *symval, char *alias)
-{
-	DEF_FIELD(symval, tee_client_device_id, uuid);
-
-	sprintf(alias, "tee:%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x",
-		uuid.b[0], uuid.b[1], uuid.b[2], uuid.b[3], uuid.b[4],
-		uuid.b[5], uuid.b[6], uuid.b[7], uuid.b[8], uuid.b[9],
-		uuid.b[10], uuid.b[11], uuid.b[12], uuid.b[13], uuid.b[14],
-		uuid.b[15]);
-
-	add_wildcard(alias);
-	return 1;
-}
-
 /* Looks like: wmi:guid */
 static int do_wmi_entry(const char *filename, void *symval, char *alias)
 {
@@ -1416,7 +1369,6 @@ static const struct devtable devtable[] = {
 	{"mipscdmm", SIZE_mips_cdmm_device_id, do_mips_cdmm_entry},
 	{"x86cpu", SIZE_x86_cpu_id, do_x86cpu_entry},
 	{"cpu", SIZE_cpu_feature, do_cpu_entry},
-	{"mei", SIZE_mei_cl_device_id, do_mei_entry},
 	{"rapidio", SIZE_rio_device_id, do_rio_entry},
 	{"ulpi", SIZE_ulpi_device_id, do_ulpi_entry},
 	{"hdaudio", SIZE_hda_device_id, do_hda_entry},
@@ -1424,7 +1376,6 @@ static const struct devtable devtable[] = {
 	{"fslmc", SIZE_fsl_mc_device_id, do_fsl_mc_entry},
 	{"tbsvc", SIZE_tb_service_id, do_tbsvc_entry},
 	{"typec", SIZE_typec_device_id, do_typec_entry},
-	{"tee", SIZE_tee_client_device_id, do_tee_entry},
 	{"wmi", SIZE_wmi_device_id, do_wmi_entry},
 };
 
