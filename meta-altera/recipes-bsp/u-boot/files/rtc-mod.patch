diff -urupN old/cmd/Makefile new/cmd/Makefile
--- old/cmd/Makefile	2024-01-24 13:52:57
+++ new/cmd/Makefile	2024-01-24 11:32:18
@@ -253,6 +253,7 @@ obj-y += dump_adv7513_regs.o
 obj-y += hdmi_config.o
 obj-y += dump_adv7513_edid.o
 obj-y += dump_adv7513_regs.o
+obj-y += detect_rtc.o
 
 filechk_data_gz = (echo "static const char data_gz[] ="; cat $< | scripts/bin2c; echo ";")
 
diff -urupN old/cmd/detect_rtc.c new/cmd/detect_rtc.c
--- old/cmd/detect_rtc.c	1970-01-01 01:00:00
+++ new/cmd/detect_rtc.c	2024-01-24 12:16:50
@@ -0,0 +1,55 @@
+// SPDX-License-Identifier: GPL-2.0+
+
+#include <common.h>
+#include <command.h>
+#include <i2c.h>
+
+static int detect_rtc(int argc, char * const argv[]) {
+	int result, i2c_bus;
+	uint8_t read_buffer[20];
+	struct udevice *dev;
+
+	i2c_bus = (int)dectoul(argv[0], NULL);
+
+	result = i2c_get_chip_for_busnum(i2c_bus, 0x68, 0, &dev);
+	if(result != 0) {
+		env_set("detected_rtc", "false");
+		return(1);
+	}
+	i2c_set_chip_offset_len(dev, 0);
+	result = dm_i2c_read(
+			dev,
+			0x00,			// unsigned int addr
+			read_buffer,		// uint8_t *buffer
+			1			// int len
+		);
+	if(result != 0) {
+		env_set("detected_rtc", "false");
+		return(1);
+	}
+
+	env_set("detected_rtc", "true");
+	return (0);
+}
+
+static int do_detect_rtc(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
+{
+	int ret = 0;
+
+	if (argc < 2)
+		return CMD_RET_USAGE;
+
+	/* Strip off leading command argument */
+	argc--;
+	argv++;
+
+	ret = detect_rtc(argc, argv);
+
+	return ret ? CMD_RET_FAILURE : 0;
+}
+
+U_BOOT_CMD(
+	detect_rtc, 2, 1, do_detect_rtc,
+	"Detect RTC <bus>",
+	""
+);
diff -urupN old/include/configs/socfpga_de10_nano.h new/include/configs/socfpga_de10_nano.h
--- old/include/configs/socfpga_de10_nano.h	2024-01-24 13:55:34
+++ new/include/configs/socfpga_de10_nano.h	2024-01-24 14:54:32
@@ -34,6 +34,19 @@
 			"bridge enable; "\
 		"fi;\0"\
 	\
+	"rtc_cfg="\
+		"detect_rtc 1; "\
+		"if test \"${detected_rtc}\" = \"true\"; then "\
+			"run rtc_fdt_mod; "\
+		"fi;\0"\
+	"rtc_fdt_mod="\
+		"echo Patching FDT for RTC...; "\
+		"fdt addr ${fdt_addr}; "\
+		"fdt mknode /soc/i2c@ffc05000 rtc@68; "\
+		"setenv fdt_frag /soc/i2c@ffc05000/rtc@68; "\
+		"fdt set ${fdt_frag} compatible \"stm,m41t81\"; "\
+		"fdt set ${fdt_frag} reg <0x68>; "\
+		"\0"\
 	"hdmi_init="\
 		"run hdmi_cfg; "\
 		"if test \"${HDMI_status}\" = \"complete\"; then "\
@@ -75,7 +88,7 @@
 	\
 	BOOTENV
 
-#define CONFIG_BOOTCOMMAND "run fpga_cfg; run hdmi_init; run distro_bootcmd"
+#define CONFIG_BOOTCOMMAND "run fpga_cfg; run hdmi_init; run rtc_cfg; run distro_bootcmd"
 
 #endif
 
