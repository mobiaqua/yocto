From e9e0ffeb8164a42b9d5424774f56d4f0826e7a06 Mon Sep 17 00:00:00 2001
From: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
Date: Wed, 8 Nov 2023 21:25:16 +0530
Subject: [PATCH 158/322] drm/tidss: Fix OLDI default rate setup

In dispc_init() we set OLDI clocks to a default rate to avoid overly
high clock rates after resetting the DSS.

Instead of doing this once in dispc_init() it should be done every time
we reset the DSS, and preferably before resetting the DSS. Move the
clock setup code to dispc_softreset(), and also move the call site of
dispc_softreset() to a bit later location so that we have the VP clocks
available.

Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
---
 drivers/gpu/drm/tidss/tidss_dispc.c | 45 ++++++++++++++++++-----------
 1 file changed, 28 insertions(+), 17 deletions(-)

diff --git a/drivers/gpu/drm/tidss/tidss_dispc.c b/drivers/gpu/drm/tidss/tidss_dispc.c
index 3efbedbf4319..6ed0bb890895 100644
--- a/drivers/gpu/drm/tidss/tidss_dispc.c
+++ b/drivers/gpu/drm/tidss/tidss_dispc.c
@@ -2955,6 +2955,30 @@ static void dispc_softreset(struct dispc_device *dispc)
 	u32 val;
 	int ret;
 
+	/*
+	 * When we reset the DSS, we also reset the OLDI enable. This disables
+	 * a /7 divider and could, in some cases, lead to the DSS receiving a
+	 * much too high pixel clock. According to the HW folks, receiving such
+	 * a high clock can potentially cause damage to the DSS controller hardware.
+	 *
+	 * So set the VP clock rate for OLDI to a lower frequency before
+	 * resetting the DSS.
+	 */
+	for (u32 vp_idx = 0; vp_idx < dispc->feat->num_vps; vp_idx++) {
+		if (dispc_get_output_type(dispc, vp_idx) == DISPC_OUTPUT_OLDI &&
+		    ((dispc->feat->subrev == DISPC_AM625) ||
+		     (dispc->feat->subrev == DISPC_AM62P51))) {
+			ret = clk_set_rate(dispc->vp_clk[vp_idx],
+					   TIDSS_AM625_IDLE_OLDI_CLOCK);
+			if (ret) {
+				dev_err(dispc->dev,
+					"vp%d: failed to set oldi clk rate to %u\n",
+					vp_idx, TIDSS_AM625_IDLE_OLDI_CLOCK);
+				return;
+			}
+		}
+	}
+
 	/* Soft reset */
 	REG_FLD_MOD(dispc, DSS_SYSCONFIG, 1, 1, 1);
 	/* Wait for reset to complete */
@@ -3050,19 +3070,6 @@ int dispc_init(struct tidss_device *tidss)
 		}
 		dispc->vp_clk[i] = clk;
 
-		if (dispc_get_output_type(dispc, i) == DISPC_OUTPUT_OLDI &&
-		    ((feat->subrev == DISPC_AM625) ||
-		     (feat->subrev == DISPC_AM62P51))) {
-			r = clk_set_rate(dispc->vp_clk[i],
-					 TIDSS_AM625_IDLE_OLDI_CLOCK);
-			if (r) {
-				dev_err(dev,
-					"vp%d: failed to set oldi clk rate to %u\n",
-					i, TIDSS_AM625_IDLE_OLDI_CLOCK);
-				return r;
-			}
-		}
-
 		gamma_table = devm_kmalloc_array(dev, gamma_size,
 						 sizeof(*gamma_table),
 						 GFP_KERNEL);
