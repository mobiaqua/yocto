From a09282e636a68978c4985c62caee5bd9a0a636be Mon Sep 17 00:00:00 2001
From: Prasanth Babu Mantena <p-mantena@ti.com>
Date: Tue, 25 Apr 2023 17:15:01 -0500
Subject: [PATCH 404/508] vxe-vxd: decoder: Add seek functionality

Add seek functionality, which is a series of stop and start streaming
calls, handling interrupts and flags in between. Clean mutex locks
implemented.

Signed-off-by: Prasanth Babu Mantena <p-mantena@ti.com>
Signed-off-by: Darren Etheridge <detheridge@ti.com>
---
 .../media/platform/img/vxe-vxd/decoder/vxd_dec.h  |  1 +
 .../media/platform/img/vxe-vxd/decoder/vxd_v4l2.c | 21 ++++++++++++-------
 2 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/drivers/media/platform/img/vxe-vxd/decoder/vxd_dec.h b/drivers/media/platform/img/vxe-vxd/decoder/vxd_dec.h
index a8d409bc4212..1c87906b3bab 100644
--- a/drivers/media/platform/img/vxe-vxd/decoder/vxd_dec.h
+++ b/drivers/media/platform/img/vxe-vxd/decoder/vxd_dec.h
@@ -268,6 +268,7 @@ struct vxd_dev {
 	struct platform_device *plat_dev;
 	struct v4l2_m2m_dev *m2m_dev;
 	struct mutex  *mutex; /* Per device mutex */
+	struct mutex  *mutex_queue; /* Mutex for ioctl synchronization on queue */
 	int module_irq;
 	void __iomem *reg_base;
 	struct vxd_core_props props;
diff --git a/drivers/media/platform/img/vxe-vxd/decoder/vxd_v4l2.c b/drivers/media/platform/img/vxe-vxd/decoder/vxd_v4l2.c
index 736db4c78811..0f0e7b71e840 100644
--- a/drivers/media/platform/img/vxe-vxd/decoder/vxd_v4l2.c
+++ b/drivers/media/platform/img/vxe-vxd/decoder/vxd_v4l2.c
@@ -401,12 +401,6 @@ static void vxd_return_resource(void *ctx_handle, enum vxd_cb_type type,
 	int i;
 	struct vxd_dec_q_data *q_data;
 
-	if (ctx->aborting) {
-		v4l2_m2m_job_finish(ctx->dev->m2m_dev, ctx->fh.m2m_ctx);
-		ctx->aborting = 0;
-		return;
-	}
-
 	switch (type) {
 	case VXD_CB_STRUNIT_PROCESSED:
 
@@ -877,6 +871,7 @@ static void vxd_dec_stop_streaming(struct vb2_queue *vq)
 		}
 	}
 
+	ctx->flag_last = FALSE;
 	vxd_dec_return_all_buffers(ctx, vq, VB2_BUF_STATE_ERROR);
 }
 
@@ -905,7 +900,7 @@ static int queue_init(void *priv, struct vb2_queue *src_vq, struct vb2_queue *ds
 	src_vq->ops = &vxd_dec_video_ops;
 	src_vq->mem_ops = &vb2_dma_sg_memops;
 	src_vq->timestamp_flags = V4L2_BUF_FLAG_TIMESTAMP_COPY;
-	src_vq->lock = vxd->mutex;
+	src_vq->lock = vxd->mutex_queue;
 	src_vq->dev = vxd->v4l2_dev.dev;
 	ret = vb2_queue_init(src_vq);
 	if (ret)
@@ -924,7 +919,7 @@ static int queue_init(void *priv, struct vb2_queue *src_vq, struct vb2_queue *ds
 	dst_vq->mem_ops = &vb2_dma_sg_memops;
 #endif
 	dst_vq->timestamp_flags = V4L2_BUF_FLAG_TIMESTAMP_COPY;
-	dst_vq->lock = vxd->mutex;
+	dst_vq->lock = vxd->mutex_queue;
 	dst_vq->dev = vxd->v4l2_dev.dev;
 	ret = vb2_queue_init(dst_vq);
 	if (ret) {
@@ -1895,6 +1890,13 @@ static int vxd_dec_probe(struct platform_device *pdev)
 		return -ENOMEM;
 
 	mutex_init(vxd->mutex);
+
+	vxd->mutex_queue = kzalloc(sizeof(*vxd->mutex_queue), GFP_KERNEL);
+	if (!vxd->mutex_queue)
+		return -ENOMEM;
+
+	mutex_init(vxd->mutex_queue);
+
 	platform_set_drvdata(pdev, vxd);
 
 	pm_runtime_enable(&pdev->dev);
@@ -2110,8 +2112,11 @@ static int vxd_dec_remove(struct platform_device *pdev)
 	pm_runtime_disable(&pdev->dev);
 	kfree(vxd->dwork);
 	mutex_destroy(vxd->mutex);
+	mutex_destroy(vxd->mutex_queue);
 	kfree(vxd->mutex);
+	kfree(vxd->mutex_queue);
 	vxd->mutex = NULL;
+	vxd->mutex_queue = NULL;
 
 	video_unregister_device(vxd->vfd_dec);
 	v4l2_m2m_release(vxd->m2m_dev);
-- 
2.41.0

