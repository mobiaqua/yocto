From a04282dfaa0ae1917d43cc3f0bbdd8787a4688e6 Mon Sep 17 00:00:00 2001
From: Hari Nagalla <hnagalla@ti.com>
Date: Wed, 9 Oct 2024 09:27:17 -0500
Subject: [PATCH 028/173] remoteproc: k3-r5: keep the device on during stop

Keep the core on when stopping a R5F core. On a stop, the core is
halted and held in reset. On a start, the reset is released after a
firmware loaded and this boots the core.
This mechanism allows each R5F core in a cluster to be
independently stopped and loaded with a new firmware.

Signed-off-by: Hari Nagalla <hnagalla@ti.com>
Reviewed-by: Beleswar Padhi <b-padhi@ti.com>
Tested-by: Beleswar Padhi <b-padhi@ti.com>
---
 drivers/remoteproc/ti_k3_r5_remoteproc.c | 18 ------------------
 1 file changed, 18 deletions(-)

diff --git a/drivers/remoteproc/ti_k3_r5_remoteproc.c b/drivers/remoteproc/ti_k3_r5_remoteproc.c
index c84683dde0bf..ad208a7ea473 100644
--- a/drivers/remoteproc/ti_k3_r5_remoteproc.c
+++ b/drivers/remoteproc/ti_k3_r5_remoteproc.c
@@ -342,15 +342,6 @@ static int k3_r5_split_reset(struct k3_r5_core *core)
 		return ret;
 	}
 
-	ret = core->ti_sci->ops.dev_ops.put_device(core->ti_sci,
-						   core->ti_sci_id);
-	if (ret) {
-		dev_err(core->dev, "module-reset assert failed, ret = %d\n",
-			ret);
-		if (reset_control_deassert(core->reset))
-			dev_warn(core->dev, "local-reset deassert back failed\n");
-	}
-
 	return ret;
 }
 
@@ -870,15 +861,6 @@ static int k3_r5_rproc_stop(struct rproc *rproc)
 			return 0;
 		}
 
-		/* do not allow core 0 to stop before core 1 */
-		core1 = list_last_entry(&cluster->cores, struct k3_r5_core,
-					elem);
-		if (core != core1 && core1->rproc->state != RPROC_OFFLINE) {
-			dev_err(dev, "%s: can not stop core 0 before core 1\n",
-				__func__);
-			ret = -EPERM;
-			goto out;
-		}
 		reinit_completion(&kproc->shut_comp);
 		ret = mbox_send_message(kproc->mbox, (void *)msg);
 		if (ret < 0) {
-- 
2.39.5 (Apple Git-154)

