From 4b24a44e075f0efa80b6390c5d4453358170aa01 Mon Sep 17 00:00:00 2001
From: Vibhore Vardhan <vibhore@ti.com>
Date: Fri, 7 Jun 2024 12:23:11 -0500
Subject: [PATCH 423/465] firmware: ti_sci: Invoke IO Isolation in LPM

In suspend handler we can send TISCI_MSG_IO_ENABLE. This suspend
handler will run after any driver with a phandle to ti_sci (nearly every
IP has this) so this may automatically end up sequenced properly.

In resume handler we can send TISCI_MSG_IO_DISABLE. Also print the wakeup
reason after linux resumes from low power mode.

Signed-off-by: Vibhore Vardhan <vibhore@ti.com>
---
 drivers/firmware/ti_sci.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/drivers/firmware/ti_sci.c b/drivers/firmware/ti_sci.c
index e672e9035f42..381d696f9346 100644
--- a/drivers/firmware/ti_sci.c
+++ b/drivers/firmware/ti_sci.c
@@ -3590,6 +3590,11 @@ static int ti_sci_suspend(struct device *dev)
 	struct ti_sci_info *info = dev_get_drvdata(dev);
 	int ret;
 
+	ret = ti_sci_cmd_set_io_isolation(&info->handle, TISCI_MSG_VALUE_IO_ENABLE);
+	if (ret)
+		return ret;
+	dev_dbg(dev, "%s: set isolation: %d\n", __func__, ret);
+
 	ret = ti_sci_prepare_system_suspend(info);
 	if (ret)
 		return ret;
@@ -3599,6 +3604,24 @@ static int ti_sci_suspend(struct device *dev)
 
 static DEFINE_SIMPLE_DEV_PM_OPS(ti_sci_pm_ops, ti_sci_suspend, NULL);
 
+static int ti_sci_resume(struct device *dev)
+{
+	struct ti_sci_info *info = dev_get_drvdata(dev);
+	u32 source;
+	u64 time;
+	int ret = 0;
+
+	ret = ti_sci_cmd_set_io_isolation(&info->handle, TISCI_MSG_VALUE_IO_DISABLE);
+	if (ret)
+		return ret;
+	dev_dbg(dev, "%s: disable isolation: %d\n", __func__, ret);
+
+	ti_sci_msg_cmd_lpm_wake_reason(&info->handle, &source, &time);
+	dev_info(dev, "%s: wakeup source: 0x%X\n", __func__, source);
+
+	return 0;
+}
+
 static int ti_sci_init_suspend(struct platform_device *pdev,
 			       struct ti_sci_info *info)
 {
-- 
2.45.1

