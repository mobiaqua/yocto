From 6cb6725a134b30b089b967e273be1c87fd0fb96f Mon Sep 17 00:00:00 2001
From: Prasanth Babu Mantena <p-mantena@ti.com>
Date: Sun, 16 Jun 2024 21:45:14 -0500
Subject: [PATCH 169/222] media: vxe-vxd: encoder: Fix Buffer Alignment of
 Encoder buffer

The Non 16 multiple resolutions were rounded up to lower 16 multiple, and so the
buffers were also getting rounded up to lower 16 multiple.
This make the output resolution also getting lower than expected resolution.
This patch fixes the buffer alignment for resolution which are non-multiple of 16,
ceil to multiple of 16 and set crop parameters used to parsei correct resolution
by decoder for Non 16 multiple resolutions. Alignment is done with respect to the
macro MB_SIZE defined to 16.

Signed-off-by: Prasanth Babu Mantena <p-mantena@ti.com>
Signed-off-by: Darren Etheridge <detheridge@ti.com>
Signed-off-by: Brandon Brnich <b-brnich@ti.com>
---
 drivers/media/platform/vxe-vxd/encoder/vxe_v4l2.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/imagination/vxe-vxd/encoder/vxe_v4l2.c b/drivers/media/platform/imagination/vxe-vxd/encoder/vxe_v4l2.c
index c248bb798386..a2dae750341e 100644
--- a/drivers/media/platform/imagination/vxe-vxd/encoder/vxe_v4l2.c
+++ b/drivers/media/platform/imagination/vxe-vxd/encoder/vxe_v4l2.c
@@ -1106,8 +1106,10 @@ static int vxe_s_fmt(struct file *file, void *priv, struct v4l2_format *f)
 			return -EINVAL;
 		}
 		if (V4L2_TYPE_IS_OUTPUT(f->type)) {
-			ctx->sh_params.width_in_mbs_minus1 = (queue->width / MB_SIZE) - 1;
-			ctx->sh_params.height_in_maps_units_minus1 = (queue->height / MB_SIZE) - 1;
+			ctx->sh_params.width_in_mbs_minus1 = ((queue->width +
+				(MB_SIZE - 1))/MB_SIZE)-1;
+			ctx->sh_params.height_in_maps_units_minus1 = ((queue->height +
+					(MB_SIZE - 1))/MB_SIZE) - 1;
 			pr_debug("h264_sequence_header_params: width_in_mbs_minus1=%d\n",
 				 ctx->sh_params.width_in_mbs_minus1);
 			pr_debug("h264_sequence_header_params: height_in_maps_units_minus1=%d\n",
@@ -1171,9 +1173,13 @@ static int vxe_s_fmt(struct file *file, void *priv, struct v4l2_format *f)
 	/* Crop parameters */
 	ctx->crop_params.clip = FALSE;
 	ctx->crop_params.left_crop_offset = 0;
-	ctx->crop_params.right_crop_offset = 0;
+	ctx->crop_params.right_crop_offset = (((ctx->sh_params.width_in_mbs_minus1 + 1)*MB_SIZE) -
+			ctx->vparams.source_width)/2;
 	ctx->crop_params.top_crop_offset = 0;
-	ctx->crop_params.bottom_crop_offset = 0;
+	ctx->crop_params.bottom_crop_offset = (((ctx->sh_params.height_in_maps_units_minus1 + 1)
+				*MB_SIZE) - ctx->vparams.source_frame_height)/2;
+	if (ctx->crop_params.right_crop_offset | ctx->crop_params.bottom_crop_offset)
+		ctx->crop_params.clip = TRUE;
 
 	pr_debug("s_fmt_flags=%#08x\n", ctx->s_fmt_flags);
 	if ((ctx->s_fmt_flags & S_FMT_FLAG_OUT_RECV) &&
-- 
2.45.2

