diff -urp old/drivers/staging/omapdrm/omap_drv.h new/drivers/staging/omapdrm/omap_drv.h
--- old/drivers/staging/omapdrm/omap_drv.h	2017-09-04 00:21:13.000000000 +0200
+++ new/drivers/staging/omapdrm/omap_drv.h	2020-01-02 16:05:15.000000000 +0100
@@ -62,6 +62,7 @@ struct omap_drm_private {
 
 	/* properties: */
 	struct drm_property *rotation_prop;
+	struct drm_property *zorder_prop;
 };
 
 /* this should probably be in drm-core to standardize amongst drivers */
diff -urp old/drivers/staging/omapdrm/omap_plane.c new/drivers/staging/omapdrm/omap_plane.c
--- old/drivers/staging/omapdrm/omap_plane.c	2017-09-04 00:21:13.000000000 +0200
+++ new/drivers/staging/omapdrm/omap_plane.c	2020-01-02 16:10:17.000000000 +0100
@@ -433,6 +433,15 @@ void omap_plane_install_properties(struc
 		priv->rotation_prop = prop;
 	}
 	drm_object_attach_property(obj, prop, 0);
+
+	prop = priv->zorder_prop;
+	if (!prop) {
+		prop = drm_property_create_range(dev, 0, "zorder", 0, 3);
+		if (prop == NULL)
+			return;
+		priv->zorder_prop = prop;
+	}
+	drm_object_attach_property(obj, prop, 0);
 }
 
 int omap_plane_set_property(struct drm_plane *plane,
@@ -452,6 +461,16 @@ int omap_plane_set_property(struct drm_p
 			ret = omap_plane_dpms(plane, DRM_MODE_DPMS_ON);
 		else
 			ret = 0;
+	} else if (property == priv->zorder_prop) {
+		struct omap_overlay *ovl = omap_plane->ovl;
+
+		DBG("%s: zorder: %02x", ovl->name, (uint32_t)val);
+		omap_plane->info.zorder = val;
+
+		if (ovl->is_enabled(ovl))
+			ret = omap_plane_dpms(plane, DRM_MODE_DPMS_ON);
+		else
+			ret = 0;
 	}
 
 	return ret;
