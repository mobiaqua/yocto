diff -urp old/viddec3test.c new/viddec3test.c
--- old/viddec3test.c	2016-01-31 08:10:16.000000000 +0100
+++ new/viddec3test.c	2016-01-31 10:09:11.000000000 +0100
@@ -17,10 +17,12 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
-#include <libdce.h>
-#include <xf86drm.h>
-#include <omap_drm.h>
-#include <omap_drmif.h>
+#include <libdce.h>
+
+#include <xdc/std.h>
+#include <ti/xdais/xdas.h>
+#include <ti/sdo/ce/Engine.h>
+#include <ti/sdo/ce/video3/viddec3.h>
 #include <signal.h>
 #include <unistd.h>
 
@@ -90,8 +92,6 @@ decoder_close(struct decoder *decoder)
 	if (decoder->params)         dce_free(decoder->params);
 	if (decoder->dynParams)      dce_free(decoder->dynParams);
 	if (decoder->inBufs) {
-		dce_buf_unlock(1, &(decoder->inBufs->descs[0].buf));
-		close(decoder->inBufs->descs[0].buf);
 		dce_free(decoder->inBufs);
 	}
 	if (decoder->outBufs)        dce_free(decoder->outBufs);
@@ -279,16 +279,19 @@ decoder_open(int argc, char **argv)
 
 	decoder->inBufs = dce_alloc(sizeof(XDM2_BufDesc));
 	decoder->inBufs->numBufs = 1;
-	decoder->inBufs->descs[0].buf =	(XDAS_Int8 *)omap_bo_dmabuf(decoder->input_bo);
-	dce_buf_lock(1, &(decoder->inBufs->descs[0].buf));
+	decoder->inBufs->descs[0].buf = (XDAS_Int8 *)omap_bo_handle(decoder->input_bo);
 	decoder->inBufs->descs[0].bufSize.bytes = omap_bo_size(decoder->input_bo);
-	decoder->inBufs->descs[0].memType = XDM_MEMTYPE_RAW;
+	decoder->inBufs->descs[0].memType = XDM_MEMTYPE_BO;
 
 
 	decoder->outBufs = dce_alloc(sizeof(XDM2_BufDesc));
 	decoder->outBufs->numBufs = 2;
-	decoder->outBufs->descs[0].memType = XDM_MEMTYPE_RAW;
-	decoder->outBufs->descs[1].memType = XDM_MEMTYPE_RAW;
+	decoder->outBufs->descs[0].memType = XDM_MEMTYPE_BO;
+	if (decoder->disp->multiplanar) {
+		decoder->outBufs->descs[1].memType = XDM_MEMTYPE_BO;
+	} else {
+		decoder->outBufs->descs[1].memType = XDM_MEMTYPE_BO_OFFSET;
+	}
 
 	decoder->inArgs = dce_alloc(sizeof(IVIDDEC3_InArgs));
 	decoder->inArgs->size = sizeof(IVIDDEC3_InArgs);
@@ -316,10 +319,9 @@ decoder_process(struct decoder *decoder)
 	XDM2_BufDesc *outBufs = decoder->outBufs;
 	VIDDEC3_InArgs *inArgs = decoder->inArgs;
 	VIDDEC3_OutArgs *outArgs = decoder->outArgs;
-	struct buffer *buf;
-	int freeBufCount =0;
+	struct buffer *buf = NULL;
 	int i, n;
-	XDAS_Int32 err;
+	XDAS_Int32 err = 0;
 	int eof = 0; /* end of file flag */
 
 
@@ -352,17 +352,11 @@
 				decoder->lastOutBuf = buf;
 
                                 inArgs->inputID = (XDAS_Int32)buf;
-                                outBufs->descs[0].buf = buf->fd[0];
-                                outBufs->descs[1].buf = (buf->multiplanar) ?buf->fd[1]:(XDAS_Int8 *)((outBufs->descs[0].buf));
-
-                                if(buf->multiplanar){
-                                    decoder->outBuf_fd[0] = buf->fd[0];
-                                    decoder->outBuf_fd[1] = buf->fd[1];
-                                    dce_buf_lock(2,decoder->outBuf_fd);
-                                }
-                                else{
-                                    decoder->outBuf_fd[0] = buf->fd[0];
-                                    dce_buf_lock(1,decoder->outBuf_fd);
+                                outBufs->descs[0].buf = (XDAS_Int8 *)omap_bo_handle(buf->bo[0]);
+                                if (buf->multiplanar) {
+                                        outBufs->descs[1].buf = (XDAS_Int8 *)omap_bo_handle(buf->bo[1]);
+                                } else {
+                                        outBufs->descs[1].buf = (XDAS_Int8 *)decoder->uv_offset;
                                 }
                                 decoder->outBufs->descs[0].bufSize.bytes =decoder->padded_width*decoder->padded_height;
                                 decoder->outBufs->descs[1].bufSize.bytes = decoder->padded_width* (decoder->padded_height/2);
@@ -387,11 +383,11 @@ decoder_process(struct decoder *decoder)
 			outArgs->outputID[0] = 0;
 			outArgs->freeBufID[0] = 0;
 			if(!eof) {
-				outArgs->outputID[0] = buf;
-				outArgs->freeBufID[0] = buf;
+				outArgs->outputID[0] = (XDAS_Int32)buf;
+				outArgs->freeBufID[0] = (XDAS_Int32)buf;
 			}
-			outArgs->outputID[1] = NULL;
-			outArgs->freeBufID[1] = NULL;
+			outArgs->outputID[1] = 0;
+			outArgs->freeBufID[1] = 0;
 			outArgs->outBufsInUseFlag = 0;
 
 		} else {
@@ -447,20 +441,6 @@
 		for (i = 0; outArgs->freeBufID[i]; i++) {
 			buf = (struct buffer *)outArgs->freeBufID[i];
 			disp_put_vid_buffer(decoder->disp, buf);
-
-			if(buf->multiplanar){
-				decoder->outBuf_fd[freeBufCount++] = buf->fd[0];
-				decoder->outBuf_fd[freeBufCount++] = buf->fd[1];
-			}
-			else{
-				decoder->outBuf_fd[freeBufCount++] = buf->fd[0];
-				DBG("FreeBufID: %p fd:%d\n", outArgs->freeBufID[i], buf->fd[0]);
-			}
-		}
-
-		if(freeBufCount){
-			dce_buf_unlock(freeBufCount,decoder->outBuf_fd);
-			freeBufCount =0;
 		}
 
 		decoder->outBufsInUseFlag = outArgs->outBufsInUseFlag;
@@ -450,7 +433,6 @@ void *decode_stream(void *decoderHandle)
 {
 	int ret = 0;
 	struct decoder *decoder = (struct decoder*)decoderHandle;
-    int n = 0;
     if(!decoder) goto exit;
 
     while((ret = decoder_process(decoder)) == 0);
