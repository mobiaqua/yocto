From 2b66eefd07075d4bbf4bfe590d83e4c3e37b47f1 Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Sat, 23 Feb 2013 08:49:08 -0600
Subject: [PATCH 06/21] fh_cache: fix stale nfs handle on rename problem

The following test case fails with modern linunx kernels which cache
the renamed inode.

  % mkdir a;mkdir b;mv b a/;ls -l a
  ls: a/b: Stale NFS file handle

The issue is that nfserver was not updating the fh_cache with the new
location of the inode, when it moves directories.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 fh_cache.c | 12 ++++++++++++
 fh_cache.h |  1 +
 nfs.c      |  2 ++
 3 files changed, 15 insertions(+)

diff --git a/fh_cache.c b/fh_cache.c
index 4bd33f6..61c6ede 100644
--- a/fh_cache.c
+++ b/fh_cache.c
@@ -198,6 +198,18 @@ static char *fh_cache_lookup(uint32 dev, uint64 ino)
     return NULL;
 }
 
+/*
+ * update a fh inode cache for an operation like rename
+ */
+void fh_cache_update(nfs_fh3 fh, char *path)
+{
+    unfs3_fh_t *obj = (void *) fh.data.data_val;
+    backend_statstruct buf;
+
+    if (backend_lstat(path, &buf) != -1) {
+	fh_cache_add(obj->dev, buf.st_ino, path);
+    }
+}
 /*
  * resolve a filename into a path
  * cache-using wrapper for fh_decomp_raw
diff --git a/fh_cache.h b/fh_cache.h
index 5801709..7e2db78 100644
--- a/fh_cache.h
+++ b/fh_cache.h
@@ -19,5 +19,6 @@ unfs3_fh_t fh_comp(const char *path, struct svc_req *rqstp, int need_dir);
 unfs3_fh_t *fh_comp_ptr(const char *path, struct svc_req *rqstp, int need_dir);
 
 char *fh_cache_add(uint32 dev, uint64 ino, const char *path);
+void fh_cache_update(nfs_fh3 fh, char *path);
 
 #endif
diff --git a/nfs.c b/nfs.c
index 8a3324b..3e92f87 100644
--- a/nfs.c
+++ b/nfs.c
@@ -895,6 +895,8 @@ RENAME3res *nfsproc3_rename_3_svc(RENAME3args * argp, struct svc_req * rqstp)
 	    res = backend_rename(from_obj, to_obj);
 	    if (res == -1)
 		result.status = rename_err();
+	    /* Update the fh_cache with moved inode value */
+	    fh_cache_update(argp->to.dir, to_obj);
 	}
     }
 
-- 
2.42.0

