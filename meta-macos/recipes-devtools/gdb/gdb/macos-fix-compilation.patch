diff -urp old/bfd/elf-bfd.h new/bfd/elf-bfd.h
--- old/bfd/elf-bfd.h	2020-02-08 13:50:13.000000000 +0100
+++ new/bfd/elf-bfd.h	2020-12-06 15:36:49.000000000 +0100
@@ -26,6 +26,7 @@
 #include "elf/external.h"
 #include "elf/internal.h"
 #include "bfdlink.h"
+#include <string.h>
 
 #ifdef __cplusplus
 extern "C" {
diff -urp old/gdbsupport/enum-flags.h new/gdbsupport/enum-flags.h
--- old/gdbsupport/enum-flags.h	2019-09-21 00:04:41
+++ new/gdbsupport/enum-flags.h	2024-04-14 15:53:47
@@ -18,6 +18,8 @@
 #ifndef COMMON_ENUM_FLAGS_H
 #define COMMON_ENUM_FLAGS_H
 
+#include "diagnostics.h"
+
 /* Type-safe wrapper for enum flags.  enum flags are enums where the
    values are bits that are meant to be ORed together.
 
@@ -81,9 +81,12 @@ struct enum_underlying_type
 template<typename T>
 struct enum_underlying_type
 {
+  DIAGNOSTIC_PUSH
+  DIAGNOSTIC_IGNORE_ENUM_CONSTEXPR_CONVERSION
   typedef typename
     integer_for_size<sizeof (T), static_cast<bool>(T (-1) < T (0))>::type
     type;
+  DIAGNOSTIC_POP
 };
 
 template <typename E>
diff -urp old/include/diagnostics.h new/include/diagnostics.h
--- old/include/diagnostics.h	2019-02-27 05:51:50
+++ new/include/diagnostics.h	2024-04-14 15:55:30
@@ -63,6 +63,11 @@
 # define DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL \
   DIAGNOSTIC_IGNORE ("-Wformat-nonliteral")
 
+# if __has_warning ("-Wenum-constexpr-conversion")
+#  define DIAGNOSTIC_IGNORE_ENUM_CONSTEXPR_CONVERSION \
+  DIAGNOSTIC_IGNORE ("-Wenum-constexpr-conversion")
+# endif
+
 #elif defined (__GNUC__) /* GCC */
 
 # define DIAGNOSTIC_IGNORE_UNUSED_FUNCTION \
@@ -102,6 +107,10 @@
 
 #ifndef DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL
 # define DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL
+#endif
+
+#ifndef DIAGNOSTIC_IGNORE_ENUM_CONSTEXPR_CONVERSION
+# define DIAGNOSTIC_IGNORE_ENUM_CONSTEXPR_CONVERSION
 #endif
 
 #endif /* DIAGNOSTICS_H */
