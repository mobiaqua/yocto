diff -urp old/llvm/cmake/modules/AddLLVM.cmake new/llvm/cmake/modules/AddLLVM.cmake
--- old/llvm/cmake/modules/AddLLVM.cmake	2022-01-28 10:02:49
+++ new/llvm/cmake/modules/AddLLVM.cmake	2023-12-25 08:28:50
@@ -266,7 +266,7 @@ function(add_link_opts target_name)
       elseif(NOT MSVC AND NOT CMAKE_SYSTEM_NAME MATCHES "OpenBSD|AIX|OS390")
         # TODO Revisit this later on z/OS.
         set_property(TARGET ${target_name} APPEND_STRING PROPERTY
-                     LINK_FLAGS " -Wl,--gc-sections")
+                     LINK_FLAGS " -Wl,-dead_strip")
       endif()
     else() #LLVM_NO_DEAD_STRIP
       if(${CMAKE_SYSTEM_NAME} MATCHES "AIX")
diff -urp old/llvm/cmake/modules/HandleLLVMOptions.cmake new/llvm/cmake/modules/HandleLLVMOptions.cmake
--- old/llvm/cmake/modules/HandleLLVMOptions.cmake	2022-01-28 10:02:49
+++ new/llvm/cmake/modules/HandleLLVMOptions.cmake	2023-12-25 13:01:46
@@ -231,7 +231,7 @@ if(NOT (CMAKE_SYSTEM_NAME MATCHES "Darwin|FreeBSD|Open
 if(NOT (CMAKE_SYSTEM_NAME MATCHES "Darwin|FreeBSD|OpenBSD|DragonFly|AIX|SunOS|OS390" OR
         WIN32 OR CYGWIN) AND
    NOT LLVM_USE_SANITIZER)
-  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-z,defs")
+  #set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-z,defs")
 endif()
 
 # Pass -Wl,-z,nodelete. This makes sure our shared libraries are not unloaded
diff -urp old/llvm/tools/lto/CMakeLists.txt new/llvm/tools/lto/CMakeLists.txt
--- old/llvm/tools/lto/CMakeLists.txt	2022-01-28 10:02:49
+++ new/llvm/tools/lto/CMakeLists.txt	2023-12-26 07:56:39
@@ -25,7 +25,7 @@ if(CMAKE_SYSTEM_NAME STREQUAL AIX)
     set(LTO_LIBRARY_TYPE MODULE)
     set(LTO_LIBRARY_NAME libLTO)
   else()
-    set(LTO_LIBRARY_TYPE SHARED)
+    set(LTO_LIBRARY_TYPE STATIC)
     set(LTO_LIBRARY_NAME LTO)
 endif()
 
diff -urp old/llvm/tools/remarks-shlib/CMakeLists.txt new/llvm/tools/remarks-shlib/CMakeLists.txt
--- old/llvm/tools/remarks-shlib/CMakeLists.txt	2022-01-28 10:02:49
+++ new/llvm/tools/remarks-shlib/CMakeLists.txt	2023-12-26 08:02:42
@@ -11,7 +11,7 @@ if(LLVM_ENABLE_PIC)
 
   set(LLVM_EXPORTED_SYMBOL_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Remarks.exports)
 
-  add_llvm_library(Remarks SHARED INSTALL_WITH_TOOLCHAIN ${SOURCES})
+  add_llvm_library(Remarks STATIC INSTALL_WITH_TOOLCHAIN ${SOURCES})
 
   if (LLVM_INTEGRATED_CRT_ALLOC AND MSVC)
     # Make sure we search LLVMSupport first, before the CRT libs
